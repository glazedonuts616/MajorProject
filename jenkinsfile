pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1' // e.g., us-east-1
        EKS_CLUSTER_NAME = 'my-terra-cluster'
        DOCKER_IMAGE_NAME = 'shashkist/flask-contacts-app'
        REPO_URL = 'https://github.com/glazedonuts616/MajorProject.git' // e.g., https://github.com/your-org/your-repo.git
    }

    stages {
        
        stage ('Clone Github Repository'){
            steps{
               git branch: 'main', credentialsId: 'github', url: 'https://github.com/glazedonuts616/MajorProject.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build(env.DOCKER_IMAGE_NAME)
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withDockerRegistry([credentialsId: env.DOCKER_CREDENTIALS, url: 'https://index.docker.io/v1/']) {
                    script {
                        dockerImage.push("latest")
                    }
                }
            }
        }

        stage('Configure AWS CLI') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: env.AWS_CREDENTIALS]]) {
                    sh "aws configure set region ${env.AWS_REGION}"
                    sh "aws eks update-kubeconfig --region ${env.AWS_REGION} --name ${env.EKS_CLUSTER_NAME}"
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    // Replace these file paths with the actual paths to your Kubernetes manifests
                    sh "kubectl apply -f k8s/deployment.yaml"
                    sh "kubectl apply -f k8s/service.yaml"
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed. Check logs for details.'
        }
    }
}
